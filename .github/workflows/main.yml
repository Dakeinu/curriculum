name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build Docker image
        run: docker build -t dakeinu/curriculum:latest -f ./Dockerfile .

      - name: Push Docker image to Docker Hub
        run: docker push dakeinu/curriculum:latest

      - name: Setup SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Update server and deploy with Docker
        run: |
          ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_HOST }} << EOF
            sudo -u ${{ secrets.SSH_CHANGED_USER }} bash -c "
              cd ${{secrets.SSH_CD_PATH}}
              git pull
              docker pull dakeinu/curriculum:latest
              docker-compose up -d --build
            "
          EOF
      
      - name: Build and push result output
        id: result_output
        run: |
          echo "Build and Push successful" > build-result.txt

      - name: Upload result output
        uses: actions/upload-artifact@v3
        with:
          name: build-result
          path: build-result.txt

  notification:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Download build result output
        uses: actions/download-artifact@v3
        with:
          name: build-result

      - name: Read build result output
        id: read_build_result
        run: |
          result_content=$(<build-result.txt)
          echo "::set-output name=result::$result_content"

      - name: Call n8n webhook
        run: |
          curl -X POST -H "Content-type: application/json" --data "{\"text\":\"${{ steps.read_build_result.outputs.result }}\"}" ${{ secrets.WEBHOOK_URL }}
